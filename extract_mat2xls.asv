% function [outputArg1,outputArg2] = untitled(inputArg1,inputArg2)
% %UNTITLED7 Summary of this function goes here
% %   Detailed explanation goes here
% outputArg1 = inputArg1;
% outputArg2 = inputArg2;
% end
% 
% 

function [outputArg1,outputArg2] = extract_mat2xls(input_dir,output_dir, frame_rate)
%extract_mat2xls extracts required info from NEURON output .mat file
%   This information is then saved in .xls files in specified output
%   directory. Any .mat files that we want to exclude from analysis can
%   be placed in subfolder within input directory (eg with the name
%   "EXCLUDED"), as this function will ignore files in subfolders. 
%   Frame rate (frame_rate). Until now have always used 10 frames per
%   second, but as camera is actually slightly slower, set value to 9.9.


% Get a list of all .mat files in the input folder (no subfolders)
matFiles = dir(fullfile(input_dir, '*.mat'));

%Cycle through list,  extract required info , save xls
for i = 1:length(matFiles)

    %Get full file path for this filename
    filePath = fullfile(input_dir, matFiles(i).name);
    %Load  file
    load(filePath)



    %Extract necessary variables
    green = leftvalues;  %green fluorescence 
    red = rightvalues; %red fluorescence
    ratio_greenred = ratios; %green/red fluorescence ratio


    %Create new variables for time (frames and seconds)
    frames = [1:1:length(ratios)]; %frame number
    frames = frames';               %transpose to get column vector    
    seconds = (1/frame_rate)*(0:(length(ratios)-1)); %calculates time in seconds corresponding to each frame and ratio
    seconds = seconds';             %transpose to get column vector
    


    %Create a short_filename for this file (will be name of saved xls file)
    short_filename = erase(matFiles(i).name, '-analysisdata.mat');








end




% Get a list of all .mat files in the parent folder (no subfolders)
matFiles = dir(fullfile(parentFolder, '*.mat'));

% Initialize a cell array to hold the loaded data
loadedData = cell(length(matFiles), 1);

% Loop through the .mat files and load them
for i = 1:length(matFiles)
    % Get the full file path
    filePath = fullfile(parentFolder, matFiles(i).name);
    
    % Load the .mat file
    loadedData{i} = load(filePath); % Load the file into a structure
    fprintf('Loaded .mat file: %s\n', matFiles(i).name);
end

% Remove any empty cells from loadedData
loadedData(cellfun(@isempty, loadedData)) = [];

% You can now access your loaded data






filename_list = [


];



[r, c] = size(filename_list);
%Loop through files in list and extract needed variables
for i = 1:r

    %import data from  .mat file
    filename = filename_list(i,:); %set filename to one of filenames in list
    load(filename)                 % open saved workspace with all Neuron output variables 
    filename = erase(filename, '-analysisdata.mat');
    s= strfind(filename,'/');
    short_filename = extractAfter(filename,max(s));
    
    %Extract relevant variables
    xb = leftvalues;  %green fluorescence 
    yc = rightvalues; %red fluorescence
    ratiosxbyc = ratios; %green/red fluorescence ratio
    
    
    
    %Create frames and seconds vectors to save   
    frames = [1:1:length(ratios)]; %frame number
    frames = frames';
    seconds = (1/9.9)*(0:(length(ratios)-1)); %calculates time in s corresponfing to each frame and ratio
    seconds = seconds';
    
    %Create matrix to be saved
    data_to_save = horzcat (ratiosxbyc,xb,yc,frames ,seconds);    
    writematrix(data_to_save,short_filename,'Filetype', 'spreadsheet'); %write ratios variable to excel


end